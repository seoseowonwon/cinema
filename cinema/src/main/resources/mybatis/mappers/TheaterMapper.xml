<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.cinema.mapper.TheaterMapper">

	<insert id="insertTheater" parameterType="com.project.cinema.entity.Theater">
		INSERT INTO movie_reservation(
			title,
			region,
			theater_name,
			date,
			time
		) VALUES (
			#{title},
			#{region},
			#{theater_name},
			#{date},
			#{time}
		)
	</insert>
	
	<select id="checkDateResult" parameterType="String">
		SELECT EXISTS(SELECT date FROM movie_reservation WHERE date = #{date});
	</select>
	
	<select id="checkTitle" parameterType="String">
		SELECT EXISTS(SELECT title FROM movie_reservation WHERE title = #{title});
	</select>
	
	<delete id="deleteTheater">
		DELETE FROM movie_reservation
	</delete>
	
	<select id="getRegionInfo" resultType="Map">
		SELECT DISTINCT region 
		FROM movie_reservation
		WHERE title = #{title}
	</select>
	
	<select id="getTheaterInfo" resultType="Map">
		SELECT distinct theater_name 
		FROM movie_reservation 
		WHERE title = #{title} 
		AND region=#{region}  
	</select>
	
	<select id="getTimeInfo" parameterType="String" resultType="Map">
		SELECT time 
		FROM movie_reservation 
		WHERE title = #{title}
		AND region = #{region}
		AND theater_name= #{theaterName}
	</select>
	
	<update id="updateResDate" parameterType="String">
		UPDATE movie_reservation
		SET res_date = #{res_date}
		WHERE theater_name = #{theaterName}
		AND time = #{time}
	</update>
	
	<update id="updateSeats" parameterType="String">
		UPDATE movie_reservation
		SET seats = #{seats}
		WHERE title= #{title}
		AND res_date = #{resDate}
		AND theater_name = #{theaterName}
		AND time = #{time}
	</update>
	
	<!-- 첫 화면에서 예약된 좌석인지 가져오는 쿼리 -->
	<select id="getSeatInfo" parameterType="String" resultType="Map">
		SELECT
			movie_no movieNo, 
			title, 
			region, 
			theater_name theaterName, 
			date, 
			res_date resDate, 
			time,
			A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, 
			B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, 
			C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, 
			D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, 
			E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, 
			F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, 
			G1, G2, G3, G4, G5, G6, G7, G8, G9, G10, 
			H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, 
			I1, I2, I3, I4, I5, I6, I7, I8, I9, I10, 
			J1, J2, J3, J4, J5, J6, J7, J8, J9, J10, 
			K1, K2, K3, K4, K5, K6, K7, K8, K9, K10
		FROM resv_seats
		WHERE movie_no = #{movieNo}
	</select>
	
	<select id="bringMovieNo" parameterType="String">
		SELECT movie_no
		FROM movie_reservation
		WHERE title= #{title}
		AND theater_name= #{theaterName} 
		AND res_date = #{resDate} 
		AND time = #{time}
	</select>
	
	<select id="checkSeats" parameterType="String">
		SELECT COUNT(*)
		FROM resv_seats
		WHERE movie_no = #{movieNo}
	</select>
	
	<insert id="insertSeats" parameterType="String">
		INSERT INTO resv_seats (movie_no, title, region, theater_name, DATE, res_date, time)
		SELECT movie_no, title, region, theater_name, DATE, res_date, time
		FROM movie_reservation
		WHERE movie_no = #{movieNo}
	</insert>
	
	<update id="updateResvSeats">
	    UPDATE resv_seats
	    <set>
	        <foreach collection="selectedSeats" item="seat" separator=",">
	            ${seat} = 'O'
	        </foreach>
	    </set>
	    WHERE movie_no = #{movieNo}
	</update>
	
	<select id="checkLogin" parameterType="string">
		SELECT COUNT(id)
		FROM member 
		WHERE id = #{id} AND PASSWORD= #{password}
	</select>

</mapper>